Next: Chapter 7.9 (Scope and the stack)
5.3.2 i 5.3.3 -> some complicated if for checking if union contains some specific type
5.3.6 -> watch video

POINTERS:
 &broj		-> get address of normal variable
 num: ^int 	-> declare a pointer of some type
 num = &broj-> assign address of normal variable to a pointer
 num^		-> get value of variable to which pointer is pointing to
				(num^ = num^ + 1)
				(if num was a struct, then we don't need ^
				this "num^.x = 2" is the same as "num.x = 2")



SUGGESTIONS (FEEDBACK):
1.)
In chapter 5.1.3, the sentence "It it controlled by whoever is playing the game.",
should be "It is controlled..."

2.)
In chapter 7.5 (Parameters are always immutable), the last example
demonstrates that pointer 'n' can't be redirected to some other value.
However, for the sake of completeness, it would be worth mentioning (in a bubble)
that even pointers can be shadowed, like this:

increase_number :: proc(n: ^int, amount: int) {
	some_other_int := 7
	n := &some_other_int
	n^ += amount
	fmt.println(n^)
}
